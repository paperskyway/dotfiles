#   -------------------------------
#     ALIASES
#   -------------------------------

#   Set Paths
#   ------------------------------------------------------------
export GOPATH="$HOME/workspace/gocode"
export PATH=$PATH:$GOPATH/bin

export BINPATH="$HOME/dotfiles/bin:/usr/local/bin"
export PATH="${BINPATH}:${PATH}:${GOPATH//://bin:}/bin"
export JAVA_HOME=$(/usr/libexec/java_home)
export ANDROID_HOME="/usr/local/opt/android-sdk"

#   Set Default
#   ------------------------------------------------------------
export EDITOR="vim"
export SHELL="/usr/local/bin/zsh"

#   Basic Aliases Preferences
#   ------------------------------------------------------------
alias ls='ls -Gp'                           # Preferred ‘ls’ implementation
alias cp='cp -iv'                           # Preferred 'cp' implementation
alias mv='mv -iv'                           # Preferred 'mv' implementation
alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
alias lsa='ls -aGp'			    # List all
alias lss='du -sh *'
alias ll='ls -FGlAhp'                      # List with a bunch of tags
alias diff='colordiff'
alias ftp='lftp'
alias top='htop'
# alias vim='nvim'

#   Directory Aliases
#   ------------------------------------------------------------
cd() { builtin cd "$@"; ls; }               # Always list directory contents upon 'cd'
alias back='cd ../'                         # Go back 1 directory level
alias cd..='cd ../'                         # Go back 1 directory level
alias cd...='cd ../../'                     # Go back 2 directory levels
alias cd....='cd ../../../'                 # Go back 3 directory levels
alias ..='cd ../'                           # Go back 1 directory level
alias ...='cd ../../'                       # Go back 2 directory levels
alias ....='cd ../../'                      # Go back 3 directory levels
alias .2='cd ../../'                        # Go back 2 directory levels
alias .3='cd ../../../'                     # Go back 3 directory levels
alias .4='cd ../../../../'                  # Go back 4 directory levels
alias .5='cd ../../../../../'               # Go back 5 directory levels
alias .6='cd ../../../../../../'            # Go back 6 directory levels
alias ~="cd ~"                              # ~: Go Home


#   Other Aliases
#   ------------------------------------------------------------
alias edit='vim'                      # edit:         Opens any file in vim editor
alias finder='open -a Finder ./'       # f:            Opens current directory in MacOS Finder
alias which='type'                     # which:        Find executables
alias path='echo -e ${PATH//:/\, }'         # path:         Echo all executable Paths
alias cleanupDS="find . -type f -name '*.DS_Store' -ls -delete"
                                            #cleanupDS:     Cleanup .DS_store recursively
alias mvscreenshots="mkdir ~/Pictures/Mac\ Screenshots/ ~/Pictures/Saved/ && mv ~/Desktop/*.png ~/Pictures/Mac\ Screenshots/"
                                            #mvscreenshots: Move all screenshots on desktop to screenshot folde
alias sizeof="du -hs"
alias wordcount="ls-files | xargs wc -l"
alias lsport="lsof -i -n -P | grep LISTEN"
alias brewup="brew update; brew upgrade; brew prune; brew cleanup; brew doctor"
alias uuidgen='uuidgen | tr "[:upper:]" "[:lower:]"'

# alias listallapp="sudo find / -iname *.app"
# alias fix_terminal='stty sane'              # fix_stty:     Restore terminal settings when screwed up

#   Version Aliases
#   ------------------------------------------------------------
# alias pip='pip3'
# alias python='python3'

#  Currently working on projects/Directory navigation
#  ------------------------------------------------------------
# alias bpro="vim ~/dotfiles/.aliases"
# alias new="open -a Terminal '$HOME'"
# docs() { cd ~/Documents/; }
# alias workspace="cd ~/workspace"

#   Network Aliases
#   ------------------------------------------------------------
alias myexternalip='curl ipecho.net/plain ; echo'
alias mylocalip='(ipconfig getifaddr en0 ; ipconfig getifaddr en1) | tee /dev/tty | pbcopy'
alias networkstatus='netstat -an -f inet -p tcp | grep LISTEN' #networkstatus  Show network statuses

#   -------------------------------
#     FUNCTIONS
#   -------------------------------

# trash:  Move a folder or file to the trash
# ---------------------------------------------------------
trash () {
    echo -e "\e[31m'${@}' has been trashed.\e[0m"
    command mv "$@" ~/.Trash
}

# ql:  Opens file in MacOS Quicklook Preview
# ---------------------------------------------------------
ql () {
    qlmanage -p "$*" >& /dev/null
}

# mcd:  akes new Dir and jumps inside
# ---------------------------------------------------------
mkcd () {
    mkdir -p "$1" && cd "$1"
}

# chrome:  Open in chrome
# ---------------------------------------------------------
chrome() {
    open -a "Google Chrome" $@
}

# safari:  Open in safari
# ---------------------------------------------------------
safari() {
    open -a "Safari" $@
}

# killport: kills the port you specify
# ---------------------------------------------------------
killport() {
    echo -e "\e[31mPort '${1}' has been killed.\e[0m"
    lsof -i TCP:$1 | awk '/LISTEN/ {print $2}' | xargs kill -9
}

# cdf: cd to the path of the front Finder window
# ----------------------------------------------------------
cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}

if [ -f ~/.customrc ]; then
    . ~/.customrc
fi

# music stuff
# ----------------------------------------------------------
alias massive="cd /Library/Application\ Support/Native\ Instruments/Massive/Sounds"
alias serum="cd /Users/Shared/Serum\ Presets"
alias vst="cd /Library/Audio/Plug-Ins/"
alias sylenth="cd ~/Library/Application\ Support/LennarDigital/Sylenth1"
alias vocaloid="cd /Library/Application\ Support"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/andytung/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/andytung/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/andytung/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/andytung/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
